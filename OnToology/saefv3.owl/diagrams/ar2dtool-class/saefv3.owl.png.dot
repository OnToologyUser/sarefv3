digraph ar2dtool_diagram { 
rankdir=LR;
size="1501"
node [shape = rectangle, color="orange"]; "saref:Time" "saref:Measurement" "saref:Price" "saref:LightSwitch" "saref:StopCommand" "saref:State" "saref:UnitOfMeasure" "saref:OpenCloseFunction" "saref:FeatureOfInterest" "saref:LevelControlFunction" "saref:Task" "saref:SensingFunction" "saref:EventFunction" "saref:Device" "saref:StartStopState" "saref:OpenCloseState" "saref:OffCommand" "saref:OnCommand" "saref:Service" "saref:StartStopFunction" "saref:MeteringFunction" "saref:OpenCommand" "saref:ActuatingFunction" "saref:OnOffFunction" "saref:OnOffState" "saref:Profile" "saref:Command" "saref:Smoke" "saref:Temperature" "saref:StepUpCommand" "saref:Commodity" "saref:CloseCommand" "saref:StepDownCommand" "saref:Function" "saref:SwitchOnService" "2dea87db:17068069eef:-7fd3" "saref:MultiLevelState" "saref:Light" "2dea87db:17068069eef:-7fc5" "saref:StartCommand" "saref:Property" ; /*classes style*/
	"NULL" -> "saref:isMeasuredByDevice" [ label = "owl:onProperty" ];
	"NULL" -> "saref:Measurement" [ label = "owl:someValuesFrom" ];
	"NULL" -> "2dea87db:17068069eef:-7fd3" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:measuresProperty" [ label = "owl:onProperty" ];
	"NULL" -> "2dea87db:17068069eef:-7fc4" [ label = "owl:unionOf" ];
	"NULL" -> "saref:isMeasurementOf" [ label = "owl:onProperty" ];
	"NULL" -> "saref:Light" [ label = "owl:someValuesFrom" ];
	"NULL" -> "saref:OnOffFunction" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:isUsedFor" [ label = "owl:onProperty" ];
	"NULL" -> "saref:accomplishes" [ label = "owl:onProperty" ];
	"NULL" -> "saref:OpenCloseFunction" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:represents" [ label = "owl:onProperty" ];
	"NULL" -> "2dea87db:17068069eef:-7fd1" [ label = "rdf:rest" ];
	"NULL" -> "saref:isControlledByDevice" [ label = "owl:onProperty" ];
	"NULL" -> "saref:Smoke" [ label = "owl:someValuesFrom" ];
	"NULL" -> "saref:OnOffFunction" [ label = "owl:someValuesFrom" ];
	"NULL" -> "saref:controlsProperty" [ label = "owl:onProperty" ];
	"NULL" -> "saref:Commodity" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:offers" [ label = "owl:onProperty" ];
	"NULL" -> "saref:hasTime" [ label = "owl:onProperty" ];
	"NULL" -> "saref:Command" [ label = "owl:onClass" ];
	"NULL" -> "saref:Property" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:hasProperty" [ label = "owl:onProperty" ];
	"NULL" -> "saref:UnitOfMeasure" [ label = "owl:onClass" ];
	"NULL" -> "saref:Measurement" [ label = "owl:onClass" ];
	"NULL" -> "saref:isPropertyOf" [ label = "owl:onProperty" ];
	"NULL" -> "saref:hasMeterReadingType" [ label = "owl:onProperty" ];
	"NULL" -> "saref:hasValue" [ label = "owl:onProperty" ];
	"NULL" -> "saref:Property" [ label = "owl:onClass" ];
	"NULL" -> "saref:MeteringFunction" [ label = "owl:someValuesFrom" ];
	"NULL" -> "saref:State" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:SensingFunction" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:isCommandOf" [ label = "owl:onProperty" ];
	"NULL" -> "saref:EventFunction" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:Measurement" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:ActuatingFunction" [ label = "owl:someValuesFrom" ];
	"NULL" -> "saref:isAbout" [ label = "owl:onProperty" ];
	"NULL" -> "saref:MeteringFunction" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:LevelControlFunction" [ label = "owl:allValuesFrom" ];
	"NULL" -> "rdf:nil" [ label = "rdf:rest" ];
	"NULL" -> "saref:relatesToProperty" [ label = "owl:onProperty" ];
	"NULL" -> "saref:Device" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:isMeasuredIn" [ label = "owl:onProperty" ];
	"NULL" -> "2dea87db:17068069eef:-7fd2" [ label = "owl:unionOf" ];
	"NULL" -> "saref:Device" [ label = "owl:onClass" ];
	"NULL" -> "2dea87db:17068069eef:-7fc5" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:Profile" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:Task" [ label = "owl:onClass" ];
	"NULL" -> "saref:SwitchOnService" [ label = "owl:someValuesFrom" ];
	"NULL" -> "saref:makesMeasurement" [ label = "owl:onProperty" ];
	"NULL" -> "saref:hasState" [ label = "owl:onProperty" ];
	"NULL" -> "saref:Temperature" [ label = "owl:someValuesFrom" ];
	"NULL" -> "saref:isOfferedBy" [ label = "owl:onProperty" ];
	"NULL" -> "saref:EventFunction" [ label = "owl:someValuesFrom" ];
	"NULL" -> "saref:Service" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:StartStopState" [ label = "owl:someValuesFrom" ];
	"NULL" -> "xsd:dateTime" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:actsUpon" [ label = "owl:onProperty" ];
	"NULL" -> "saref:UnitOfMeasure" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:hasSensingRange" [ label = "owl:onProperty" ];
	"NULL" -> "saref:Property" [ label = "rdf:first" ];
	"NULL" -> "saref:hasMeterReading" [ label = "owl:onProperty" ];
	"NULL" -> "saref:hasPrice" [ label = "owl:onProperty" ];
	"NULL" -> "saref:consistsOf" [ label = "owl:onProperty" ];
	"NULL" -> "saref:StartStopFunction" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:Commodity" [ label = "rdf:first" ];
	"NULL" -> "saref:MultiLevelState" [ label = "owl:someValuesFrom" ];
	"NULL" -> "saref:hasFunction" [ label = "owl:onProperty" ];
	"NULL" -> "saref:OnOffState" [ label = "owl:someValuesFrom" ];
	"NULL" -> "saref:hasProfile" [ label = "owl:onProperty" ];
	"NULL" -> "2dea87db:17068069eef:-7fc3" [ label = "rdf:rest" ];
	"NULL" -> "saref:hasThresholdMeasurement" [ label = "owl:onProperty" ];
	"NULL" -> "saref:hasSensorType" [ label = "owl:onProperty" ];
	"NULL" -> "saref:hasManufacturer" [ label = "owl:onProperty" ];
	"NULL" -> "saref:hasMeasurement" [ label = "owl:onProperty" ];
	"NULL" -> "saref:hasTimestamp" [ label = "owl:onProperty" ];
	"NULL" -> "saref:hasModel" [ label = "owl:onProperty" ];
	"NULL" -> "saref:SensingFunction" [ label = "owl:someValuesFrom" ];
	"NULL" -> "saref:FeatureOfInterest" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:hasCommand" [ label = "owl:onProperty" ];
	"NULL" -> "saref:OpenCloseFunction" [ label = "owl:someValuesFrom" ];
	"NULL" -> "saref:relatesToMeasurement" [ label = "owl:onProperty" ];
	"NULL" -> "saref:LightSwitch" [ label = "owl:someValuesFrom" ];
	"NULL" -> "saref:OpenCloseState" [ label = "owl:someValuesFrom" ];
	"NULL" -> "saref:Function" [ label = "owl:onClass" ];
	"NULL" -> "saref:Price" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:Time" [ label = "owl:allValuesFrom" ];
	"saref:StartCommand" -> "saref:StopCommand" [ label = "owl:disjointWith" ];
	"saref:" -> "http://www.garcia-castro.com/foaf.rdf#me" [ label = "dcterms:contributor" ];
	"saref:" -> "http://maxime-lefrancois.info/me#" [ label = "dcterms:contributor" ];
	"saref:" -> "https://www.linkedin.com/in/lauradaniele" [ label = "dcterms:contributor" ];
	"saref:" -> "https://www.etsi.org/" [ label = "dcterms:publisher" ];
	"saref:" -> "https://w3id.org/people/mpoveda/" [ label = "dcterms:contributor" ];
	"saref:" -> "https://forge.etsi.org/etsi-software-license" [ label = "dcterms:license" ];
	"saref:OffCommand" -> "saref:OnCommand" [ label = "owl:disjointWith" ];
	"saref:CloseCommand" -> "saref:OpenCommand" [ label = "owl:disjointWith" ];
	"saref:StepDownCommand" -> "saref:StepUpCommand" [ label = "owl:disjointWith" ];
	"saref:MeteringFunction" -> "saref:Property" [ label = "saref:hasMeterReadingType" ];
	"saref:Service" -> "saref:Function" [ label = "saref:represents" ];
	"saref:Device" -> "saref:Service" [ label = "saref:offers" ];
	"owl:Thing" -> "saref:Task" [ label = "saref:accomplishes" ];
	"saref:Measurement" -> "saref:Device" [ label = "saref:measurementMadeBy" ];
	"saref:Device" -> "saref:Property" [ label = "saref:controlsProperty" ];
	"saref:Command" -> "saref:Function" [ label = "saref:isCommandOf" ];
	"owl:Thing" -> "saref:Price" [ label = "saref:hasPrice" ];
	"saref:FeatureOfInterest" -> "saref:Measurement" [ label = "saref:hasMeasurement" ];
	"saref:Device" -> "saref:Property" [ label = "saref:measuresProperty" ];
	"saref:Measurement" -> "saref:FeatureOfInterest" [ label = "saref:isMeasurementOf" ];
	"saref:SensingFunction" -> "saref:Property" [ label = "saref:hasSensorType" ];
	"saref:FeatureOfInterest" -> "saref:Property" [ label = "saref:hasProperty" ];
	"saref:Device" -> "saref:Function" [ label = "saref:hasFunction" ];
	"saref:Property" -> "saref:Measurement" [ label = "saref:relatesToMeasurement" ];
	"saref:MeteringFunction" -> "saref:Measurement" [ label = "saref:hasMeterReading" ];
	"saref:Property" -> "saref:Device" [ label = "saref:isControlledByDevice" ];
	"saref:Command" -> "saref:State" [ label = "saref:actsUpon" ];
	"saref:Task" -> "owl:Thing" [ label = "saref:isAccomplishedBy" ];
	"saref:SensingFunction" -> "saref:Measurement" [ label = "saref:hasSensingRange" ];
	"owl:Thing" -> "saref:Time" [ label = "saref:hasTime" ];
	"saref:Measurement" -> "saref:Property" [ label = "saref:relatesToProperty" ];
	"saref:Function" -> "saref:Command" [ label = "saref:hasCommand" ];
	"saref:Device" -> "saref:Measurement" [ label = "saref:makesMeasurement" ];
	"saref:Property" -> "saref:FeatureOfInterest" [ label = "saref:isPropertyOf" ];
	"saref:Property" -> "saref:Device" [ label = "saref:isMeasuredByDevice" ];
	"saref:Measurement" -> "saref:UnitOfMeasure" [ label = "saref:isMeasuredIn" ];
	"saref:Device" -> "saref:State" [ label = "saref:hasState" ];
	"saref:Device" -> "saref:Profile" [ label = "saref:hasProfile" ];
	"saref:Service" -> "saref:Device" [ label = "saref:isOfferedBy" ];
	"saref:EventFunction" -> "saref:Measurement" [ label = "saref:hasThresholdMeasurement" ];

}
